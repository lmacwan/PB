@using Umbraco.Web.Models
@using Umbraco.Core.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<RenderModel>
@{
    Layout = "Layout.cshtml";
    var treatmentContent = Model.Content;

    var pageHeading = treatmentContent.GetPropertyValue<string>("pageHeading");
    var bannerColour = treatmentContent.GetPropertyValue<string>("bannerColour");

    var testimonialsHtml = treatmentContent.GetPropertyValue<string>("testimonialsContent");
    var featuredImageUrl = treatmentContent.GetCropUrl("thumbnail", "banner");
    var featuredImageAltValue = treatmentContent.GetPropertyValue<string>("thumbnailImageAltValue") ?? string.Empty;

    var isHideRelatedPhoto = treatmentContent.GetPropertyValue<bool>("sidebarHideRelatedPhotos");
    var isHideRelatedVideo = treatmentContent.GetPropertyValue<bool>("sidebarHideRelatedVideos");
    var isHideRelatedTreatmentWidget = treatmentContent.GetPropertyValue<bool>("sidebarHideRelatedTreatmentWidget");
    var isHideMakeAppointmentWidget = treatmentContent.GetPropertyValue<bool>("sidebarHideMakeAppointmentWidget");

    var photos = treatmentContent.Descendants("photo");
    var videos = treatmentContent.Descendants("TreatmentVideos");
    var relatedTreatment = Umbraco.TypedContent(treatmentContent.GetPropertyValue<int>("treatmentRelatedTreatment"));

    var showPhotos = isHideRelatedPhoto == false && photos.Count(p => p != null && p.IsVisible()) > 0;
    var showVideos = isHideRelatedVideo == false && videos.Count(v => v != null && v.IsVisible()) > 0;
    var showRelatedTreatmentWidget = isHideRelatedTreatmentWidget == false && relatedTreatment != null;

    var pageContentText = Html.Raw(Server.HtmlDecode(umbraco.library.RenderMacroContent(Model.Content.GetPropertyValue<string>("pageContentText"), Model.Content.Id)).Replace("<<P>>", "<span class='paragraph'></span>"));

    var faqHeading = treatmentContent.GetPropertyValue<string>("faqHeading");
    if (string.IsNullOrEmpty(faqHeading))
    {
        faqHeading = string.Format("Other thoughts regarding {0}", pageHeading);
    }
    var faqContent = Server.HtmlDecode(umbraco.library.RenderMacroContent(Model.Content.GetPropertyValue<string>("faqContent"), Model.Content.Id)).Replace("<<P>>", "<span class='paragraph'></span>");
}
@section styles {
    <link href="~/Content/css/treatment.css" rel="stylesheet" />
    <link href="~/Content/css/testimonial.css" rel="stylesheet" />
    <style>
        span.paragraph {
            display:block;
            margin-top: 0.5em;
        }
    </style>
}
@section ImageSection {
    <section id="banner" style="background-color: @(bannerColour);">
        <div id="treatment-image" class="grid-row" style="background-color: @(bannerColour);">
            @if (string.IsNullOrEmpty(testimonialsHtml) == false)
            {
                <div class="widget banner-testimonial testimonial">
                    <div class="clearfix">
                        <p class="banner-testimonial-content"></p>
                    </div>
                    <div class="author"></div>
                </div>
            }
            <img src="@(featuredImageUrl)" alt="@(featuredImageAltValue)" width="270" height="180" style="background-color: @(bannerColour);" />
        </div>
    </section>
}
<div id="page-content" class="grid-col grid-col-9 beautify">
    <div class="vc_row-fluid">
        <a class="more" href="javascript:void(0)">
            <i class="fa fa-bars"></i>
        </a>
        @Html.Raw(pageContentText)

        @renderAccordian(faqHeading, faqContent)
    </div>
</div>
<div class="grid-col grid-col-3 sidebar" data-sidebar="1023">
    <a class="more" href="javascript:void(0)">
        <i class="fa fa-times"></i>
    </a>
    @if (showPhotos || showVideos)
    {
        <section id="relatedTreatmentLinksSection" class="widget doctors-carousel doctors">
            <div class="widget-title">Related Links</div>
            @if (showPhotos)
            {
                var link = "/gallery/photos/" + treatmentContent.UrlName;
                <div class="relatedTeaatmentLink">
                    <a href="@link" class="read-more">
                        Related Photos
                        <i class="fa fa-camera more"></i>
                    </a>
                </div>
            }
            @if (showVideos)
            {
                var link = "/gallery/videos/treatments/" + treatmentContent.UrlName;
                <div class="relatedTeaatmentLink">
                    <a href="@link" class="read-more">
                        Related Videos
                        <i class="fa fa-video-camera more"></i>
                    </a>
                </div>
            }
        </section>
    }
    @if (showRelatedTreatmentWidget)
    {
        Html.RenderPartial("_RelatedLinksPartial", relatedTreatment);
    }
    @if (isHideMakeAppointmentWidget == false)
    {
        Html.RenderPartial("_MakeAnAppointmentPartial");
    }
</div>
@helper renderAccordian(string faqHeading, string faqContent)
{
    if (string.IsNullOrEmpty(faqContent) == false)
    {
        <section class="widget widget-departments">
            <div class="widget-title">@(faqHeading)</div>
            <dl>
                @Html.Raw(faqContent)
            </dl>
        </section>
    }
}