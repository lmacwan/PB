@using Umbraco.Core.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Web.Models.RenderModel>
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewBag.ShowTitleBar = false;
    IPublishedContent homeData = null;
    var homeDataNodes = Model.Content.Descendants("HomePageContent");
}
<link href="~/Content/css/home.css" rel="stylesheet" />

@{
    var sliders = Model.Content.Descendants("Slider");
    IPublishedContent slider = null;
    if(sliders.Any()) {
        slider = sliders.First();
    }
}

@{ Html.RenderPartial("_SliderPartial", slider); }

@if (homeDataNodes.Any())
{
    homeData = homeDataNodes.First();
    var highlights = homeData.Descendants("Highlights");
    if (highlights.Any())
    {
        @Html.Partial("_HighlightsPartial", highlights.First())
    }

    var homeDataIndex = homeData.Descendants("HomeSliderContent").First();
    var rows = homeDataIndex.Children.ToList();
    var alt = string.Empty;
    if (rows.Any())
    {
        var classActive = "active";
        var classVisible = "visible";
        <div class="comments clearfix" style="position:relative; overflow:hidden;">
            <div style='position: absolute;'>
                <div class="mask">
                    <div class="mask-wrapper">

                    </div>
                </div>
            </div>
            <div class="grid-row">

                <div class="tab">
                    @foreach (var column in rows)
                    {
                        alt = column.GetPropertyValue("thumbnailImageAltValue") as string ?? string.Empty;
                        <div class="box @classVisible">
                            @{
                        classVisible = "";
                            }
                            <h4>@column.GetPropertyValue("heading")</h4>
                            <p>@Html.Raw(column.GetPropertyValue("text").ToString())</p>
                            <img src="@Umbraco.TypedContent(column.Id).GetCropUrl("photo", "home")" alt="@alt" class="img-hide">
                        </div>
                    }
                    <ul class="tabs">
                        @foreach (var column in rows)
                        {
                            <li class="@classActive">
                                @{
                            classActive = "";
                                }
                            </li>
                        }
                    </ul>
                    <a class="tab-prev" href="#"></a>
                    <a class="tab-next" href="#"></a>
                </div>
            </div>
        </div>
    }

    <div class="treatments clearfix">
        <div class="grid-row">
            <div class="newsletter-title">
                @homeData.GetPropertyValue("treatmentHeading")
            </div>
        </div>
        
        @{
            var treatmentCategory = Model.Content.AncestorOrSelf(1).Descendants("TreatmentsSubPage").First();
        }
        
        @Html.Partial("_HighlightsPartial", treatmentCategory)

        @{
    var videoUrl = string.Format("http://www.youtube.com/embed/{0}?autoplay=1&loop=1&playlist={0}", (homeData.GetPropertyValue("youTubeVideoId") ?? ""));
        }

        <div class="grid-row">
            <div class="treatment-text">
                <div class="welcome-video">
                    <iframe width="420" height="315" src="@videoUrl"></iframe>
                </div>
                @{
    var htmlText = homeData.GetPropertyValue("treatmentContentText");
    htmlText = string.Format("{0}", htmlText.ToString().Replace('\n' + "", "</p><p>"));
                }
                @Html.Raw(htmlText)
            </div>
        </div>
    </div>

    var subscribeUrl = "/umbraco/surface/subscription/SubscribeNewsletter/";
    <div class="newsletter clearfix">
        <div class="wrap">
            <div class="newsletter-title">@homeData.GetPropertyValue("nsHeading")</div>
            <div class="newsletter-form clearfix">
                <form method="post" action="@subscribeUrl">
                    <input type="email" class="input-text" placeholder="Your email">
                    <input type="button" value="Subscribe" class="button submit" onclick="subscribeNewsLetter()">
                </form>
            </div>
            <p class="subscription-msg"></p>
            <p> @homeData.GetPropertyValue("nsInfoOnEmail")</p>
            <div style="display:none" id="email-procssing">@homeData.GetPropertyValue("nsMsgProcessing") </div>
            <div style="display:none" id="email-procssing-success">@homeData.GetPropertyValue("nsMsgOnSuccess") </div>
            <div style="display:none" id="email-procssing-error">@homeData.GetPropertyValue("nsMsgOnError") </div>
        </div>
    </div>
}
@section Scripts {
    <script src="~/scripts/library.js"></script>
    <script src="~/scripts/spascript.js"></script>
}