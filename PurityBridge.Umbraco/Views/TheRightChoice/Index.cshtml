@using Umbraco.Core.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Web.Models.RenderModel>
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewBag.ShowTitleBar = false;
    var rightChoiceData = uQuery.GetNodesByType("RightChoiceData");
}
<style>
    .align {
        border: 1px solid #e4e4e4;
        margin: 0 20px 10px 0;
        padding: 3px;
        float: left;
    }

    .spannedItems .widget + .widget {
        margin-top: 0px;
    }

    .spannedItems .vc_span6:first-child {
        border-right: 1px solid #cecece;
        padding-right: 1.1%;
    }
    .spannedItems .vc_span6 {
        margin-left: 1.1%;
    }
    .spannedItems .vc_span6:first-child {
        margin-left: 0px;
    }
    .spannedItems .vc_row-fluid, .spannedItems .wpb_content_element{
        margin-bottom: 0px !important;
    }
</style>
@if (rightChoiceData.WhereNotNull().Any())
{
    var rightChoice = Umbraco.TypedContent(rightChoiceData.First().Id);
    string isEven = "left";
    string content = string.Empty;
    <div class="vc_row-fluid spannedItems">
        @foreach (var spannedPhotoItem in rightChoice.Children(c => c.DocumentTypeAlias == "SpannedPhotoItem"))
        {
            isEven = (spannedPhotoItem.Index() % 2 == 0) ? "right" : "left";
            content = string.Format("<h1></h1><p>{0}</p>",
                        spannedPhotoItem.GetPropertyValue<string>("text")
                                        .Replace('\n' + "", "</p><h1></h1><p>"));
            <section class="widget vc_span6">
                <div class="widget-title">
                    @spannedPhotoItem.GetPropertyValue("heading")
                </div>
                <div class="wpb_text_column wpb_content_element">
                    <div class="wpb_wrapper">
                        <img src="@spannedPhotoItem.GetCropUrl("spannedPhotoItem", "Rectangular")" alt="@spannedPhotoItem.GetPropertyValue("heading")" class="align"/>
                    </div>
                    @Html.Raw(content)
                </div>
            </section>
        }
    </div>
        IPublishedContent treatment = null;
        string url;
    <div class="vc_row-fluid">

        @foreach (var list in rightChoice.Children(c => c.DocumentTypeAlias == "List"))
        {
            <div class="vc_span4">
                <!-- categories -->
                <section class="widget widget-sevices">
                    <div class="widget-title">@list.GetPropertyValue("text")</div>
                    <ul>
                        @foreach (var listItem in list.Children)
                        {
                            treatment = Umbraco.TypedContent(listItem.GetPropertyValue<int>("relatedPage"));
                            url = treatment.Parent.Url + treatment.UrlName;
                            <li><i class="fa fa-bookmark"></i><a href="@url">@listItem.GetPropertyValue("heading")</a></li>
                        }
                    </ul>
                </section>
                <!--/ categories -->
            </div>
        }
    </div>
}