@inherits Umbraco.Web.Mvc.UmbracoViewPage<IPublishedContent>

<!-- page title -->

@if (!(Model.Name.ToString().Equals("home", StringComparison.InvariantCultureIgnoreCase)))
{
    //var name = Model.Name.Equals("Photos", StringComparison.InvariantCultureIgnoreCase) || Model.Name.Equals("Videos", StringComparison.InvariantCultureIgnoreCase)
    //            ? Model.Parent.Name +" "+Model.Name
    //            : Model.Name;
    var isUnderConstruction = Request.RawUrl.Contains("construction");
    var referedNode = Model;
    var name = Model.GetPropertyValue<string>("heading");
    if (!isUnderConstruction && !Request.RawUrl.Contains("contact") && !(Model.Url.Contains(Request.RawUrl)) && Model.HasProperty("isnavigation"))
    {
        name = Model.Children().Where(d => d.Url.Contains(Request.RawUrl)).FirstOrDefault().GetPropertyValue<string>("heading");
    }
    if (Model.DocumentTypeAlias == "Photos")
    {
        name += " Photos";
    }
    else if (Model.DocumentTypeAlias == "Videos")
    {
        name += " Videos";
    }
    else if (isUnderConstruction)
    {
        name += "Under Construction";
    }
    <section class="page-title">
        <div class="grid-row clearfix">
            <h1>@name</h1>
            @if (!isUnderConstruction)
            {
                @RenderBreadCrumbs(referedNode)
            }
        </div>
    </section>
}
<!--/ page title -->

@helper RenderBreadCrumbs(IPublishedContent headerNode)
{
    <nav class="bread-crumbs">
        <a href="/">Home </a><span>&nbsp;</span>
        @foreach (IPublishedContent ancestor in Model.AncestorsOrSelf().Where(node => node.Level > 1).Skip(1).Reverse())
        {
            <i class="fa fa-angle-right"></i><span>&nbsp;</span>
            <a href="@ancestor.Url">@ancestor.Name</a>
            <span>&nbsp;</span>
        }
        <i class="fa fa-angle-right"></i><span>&nbsp;</span>
        @Model.Name
    </nav>
}