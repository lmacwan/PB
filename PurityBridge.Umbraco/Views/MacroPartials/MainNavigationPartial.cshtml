@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{ 
    var home = Umbraco.Content(uQuery.GetNodesByType("ContentItem").FirstOrDefault().Id);
    var isHomePage = CurrentPage.DocumentType == "Home";
}

@if (home.Children.Any())
{
    @* Get the first page in the children *@
    var naviLevel = home.Children.First().Level;

    @* Add in level for a CSS hook *@
    <ul class="level-@naviLevel">
        @* For each child page under the home node *@

        @foreach (var childPage in home.Children.Where("Visible").Where("ShowInHeader"))
        {
            if (childPage.Children.Any())
            {
                <li class="@(childPage.IsAncestorOrSelf(CurrentPage) ? "active" : null)">
                    <a href="#">
                        <i class="fa fa-plus"></i>
                        @childPage.Name
                    </a>
                    @childPages(childPage.Children)
                </li>
            }
            else
            {
                <li class="@(childPage.IsAncestorOrSelf(CurrentPage) ? "active" : null)">
                    <a href="@childPage.Url">@childPage.Name</a>
                </li>
            }
        }
    </ul>
}

@helper childPages(dynamic pages)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        @* Get the first page in pages and get the level *@
        var naviLevel = pages.First().Level;

        @* Add in level for a CSS hook *@
        <ul class="sublevel level-@(naviLevel)">
            @foreach (var page in pages)
            {
                <li>
                    @if (page.Children.Any())
                    {
                        <a href="@page.Url"> @page.Name <i class="fa fa-angle-right"></i> </a>
                        @childPages(page.Children)
                    }
                    else
                    {
                        <a href="@page.Url"> @page.Name </a>
                    }
                </li>
            }
        </ul>
    }
}