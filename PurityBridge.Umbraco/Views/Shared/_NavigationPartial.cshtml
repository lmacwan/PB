@inherits Umbraco.Web.Mvc.UmbracoViewPage<IPublishedContent>                                                                                        
@{
    var isHomePage = Model.Name.Equals("home", StringComparison.CurrentCultureIgnoreCase);
    var navigationItems = uQuery.GetNodesByType("Navigationitem");
    IPublishedContent relatedTo = null;
    var showOnRight = "";
}


@if (navigationItems.Any())
{
    var hasChildren = false;
    var relatedToName = "";
    foreach (var topLevelNavigation in navigationItems)
    {
        hasChildren = topLevelNavigation.Children.Count > 0;
        showOnRight = (hasChildren &&
                            topLevelNavigation.GetPrecedingSiblingNodes().Count() > topLevelNavigation.GetSiblingNodes().Count() / 2)
                                        ? "class=right"
                                        : "";
        if (isHomePage && !(topLevelNavigation.GetProperty<bool>("homepageVisible")))
        {
            continue;
        }
    <li @showOnRight>

        @if (topLevelNavigation.GetProperty<bool>("underConstruction"))
        {
           
            <a href="/underconstruction" controller="">
                @if (hasChildren)
                {
                    <i class="fa fa-plus"></i>
                }
                @topLevelNavigation.Name</a>
        }
        else if (topLevelNavigation.GetProperty<string>("relatedTo") != null)
        {
            relatedTo = Umbraco.TypedContent(topLevelNavigation.GetProperty<int>("relatedTo"));
            relatedToName = relatedTo.Url.Contains("home") ? "/" : "/" + relatedTo.Url.Split('/').Reverse().Skip(1).First();
            
            <a href="@relatedToName" controller="@topLevelNavigation.Name">
                @if (hasChildren)
                {
                    <i class="fa fa-plus"></i>
                }
                @topLevelNavigation.Name
            </a>
            
        }
        else
        {
            <a href="#" controller="@topLevelNavigation.Name">
                @if (hasChildren)
                {
                    <i class="fa fa-plus"></i>
                }@topLevelNavigation.Name

            </a>
        }
        @if (topLevelNavigation.Children.Count > 0)
        {
            @childPages(topLevelNavigation.Children)
        }
    </li>
    }
}

@helper childPages(umbraco.NodeFactory.Nodes pages)
{
    var relatedToName = string.Empty;
    IPublishedContent relatedTo = null;
    <ul>
        @foreach (umbraco.NodeFactory.Node page in pages)
        {
            <li>
                @if (page.GetProperty<bool>("underConstruction"))
                {
                    <a href="/underconstruction" controller="">
                        @if (page.Children.Count > 0)
                        {
                            <i class="fa fa-angle-right"></i>
                        }
                        @page.Name
                    </a>
                }
                else if (page.GetProperty("relatedTo") != null)
                {
                    relatedTo = Umbraco.TypedContent(page.GetProperty<int>("relatedTo"));
                    relatedToName = "/" + relatedTo.Url.Split('/').Reverse().Skip(1).First();
                    <a href="@relatedToName" controller="@page.Name">
                        @if (page.Children.Count > 0)
                        {
                            <i class="fa fa-angle-right"></i>
                        }
                        @page.Name
                    </a>
                }
                else
                {
                    <a href="#" controller="@page.Name">
                        @if (page.Children.Count > 0)
                        {
                            <i class="fa fa-angle-right"></i>
                        }
                        @page.Name
                    </a>
                }
                @if (page.Children.Count > 0)
                {
                    @childPages(page.Children)
                }
            </li>
        }
    </ul>
}