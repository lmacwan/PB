@inherits Umbraco.Web.Mvc.UmbracoViewPage<IEnumerable<umbraco.NodeFactory.Node>>
<style>
    .align {
        border: 1px solid #e4e4e4;
        padding: 3px;
        margin-bottom: 20px !important;
    }

    .spannedItems .widget + .widget {
        margin-top: 0px;
    }

    .spannedItems .vc_span6:first-child {
        border-right: 1px solid #cecece;
        padding-right: 1.1%;
    }

    .spannedItems .vc_span6 {
        margin-left: 1.1%;
    }

        .spannedItems .vc_span6:first-child {
            margin-left: 0px;
        }

    .spannedItems .vc_row-fluid, .spannedItems .wpb_content_element {
        margin-bottom: 0px !important;
    }

    .spannedItems .vc_span6 > .widget {
        margin: 50px 15px 15px 15px;
        overflow: hidden;
    }

        .spannedItems .vc_span6 > .widget:first-child {
            margin-top: 0px;
        }

    /*.spannedItems .capitalized:first-letter {
        background: none repeat scroll 0 0 #00aba5;
    }*/

    .spannedItems .capitalized:first-letter {
        color: #fff;
        display: block;
        float: left;
        font-size: 28px;
        height: 32px;
        line-height: 32px;
        margin: 5px 10px 0 0;
        text-align: center;
        width: 32px;
    }
</style>
@if (Model.WhereNotNull().Any())
{
    var rightChoice = Umbraco.TypedContent(Model.First().Id);
    string content = string.Empty;
    var contentItems = rightChoice.Children(c => c.DocumentTypeAlias == "SpannedPhotoItem");
    int half = Convert.ToInt16(Math.Ceiling(contentItems.Count() / 2.0));
    <div class="vc_row-fluid spannedItems">
        <div class="vc_span6">
            @foreach (var spannedPhotoItem in contentItems.Take(half))
            {
                content = string.Format("<h1></h1><p class='capitalized'>{0}</p>",
                            spannedPhotoItem.GetPropertyValue<string>("text")
                                            .Replace('\n' + "", "</p><h1></h1><p>").Replace("<<.>>", "<i class='fa fa-circle'>  </i>"));
                <section class="widget right">
                    <div class="widget-title">
                        @spannedPhotoItem.GetPropertyValue("heading")
                    </div>
                    <div class="wpb_text_column wpb_content_element">
                        <div class="wpb_wrapper">
                            <img src="@spannedPhotoItem.GetCropUrl("spannedPhotoItem", "Square Crop")" alt="@spannedPhotoItem.GetPropertyValue("heading")" class="align"/>
                        </div>
                        @Html.Raw(content)
                    </div>
                </section>
            }
        </div>
        <div class="vc_span6">
            @foreach (var spannedPhotoItem in contentItems.Skip(half))
            {
                content = string.Format("<h1></h1><p class='capitalized'>{0}</p>",
                            spannedPhotoItem.GetPropertyValue<string>("text")
                                            .Replace('\n' + "", "</p><h1></h1><p>").Replace("<<.>>", "<i class='fa fa-circle'>  </i>"));
                <section class="widget left">
                    <div class="widget-title">
                        @spannedPhotoItem.GetPropertyValue("heading")
                    </div>
                    <div class="wpb_text_column wpb_content_element">
                        <div class="wpb_wrapper">
                            <img src="@spannedPhotoItem.GetCropUrl("spannedPhotoItem", "Square Crop")" alt="@spannedPhotoItem.GetPropertyValue("heading")" class="align"/>
                        </div>
                        @Html.Raw(content)
                    </div>
                </section>
            }
        </div>
    </div>
}