@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<IPublishedContent>
@{
    IPublishedContent data = Model.Content;
}

@if (data != null)
{
    var slides = data.Children;

    if (slides.Any())
    {
        var url = "";
        var relatedPage = "";
        var transiton = "";
        var slideDuration = 0;
        var textDuration = 0;
        var slideTransition = "";

    <!-- slider -->
        <div class="slider-wrapper">
            <section class="slider" id="slider">
                @foreach (IPublishedContent slide in slides)
                {
                    url = Umbraco.TypedMedia(slide.GetPropertyValue<int>("filepath")).Url;
                    relatedPage = Umbraco.TypedContent(slide.GetPropertyValue<int>("relatedPage")).Url;
                    //textDuration = (int)((slider.GetPropertyValue<int>("delay") * 0.2851) * 1000);
                    textDuration = 4000;

                    slideTransition = slide.GetPropertyValue<int>("slideTransition") <= 0 ? "111" : slide.GetPropertyValue<int>("slideTransition") + "";

                    if (slide.GetPropertyValue<string>("textTransition").ToLower() == "skew")
                    {
                        transiton = "skewxin:30;skewyin:0;offsetxin:right;fadein:false;durationin:" + textDuration + ";durationout:" + (textDuration / 2) + ";offsetxout:right;offsetyout:0;fadeout: true;";
                    }
                    else if (slide.GetPropertyValue<string>("textTransition").ToLower() == "rotate")
                    {
                        slideDuration = (int)((slide.GetPropertyValue<int>("delay") * 0.428) * 1000);
                        transiton = "scalexin:0.3;scaleyin:0.3;rotatexin:180;offsetxin:0;durationin:" + textDuration + ";durationout:" + textDuration + ";scalexout:2;scaleyout:2;offsetxout:0;fadeout: true;showuntil:" + slideDuration + ";";
                    }
                    else
                    {
                        transiton = " offsetyin:top;offsetxin:0;durationin:" + textDuration + ";offsetyout:bottom;offsetxout: 0;durationout:" + (textDuration / 2) + ";";
                    }
                    var alt = slide.GetPropertyValue<string>("thumbnailImageAltValue") ?? string.Empty;
                    <div class="ls-slide" data-ls='transition2d:@slideTransition;slidedelay:@slide.GetPropertyValue("delay")000;'>
                        <img src="@url" alt="@alt" class="ls-bg" />
                        @if (slide.GetPropertyValue<string>("line1") != "")
                        {
                            <div class="intro ls-l" data-ls='@transiton;' style='left: 80%; top: 35%;'>
                                <h2><span>@slide.GetPropertyValue("line1")</span><span>@slide.GetPropertyValue("line2")</span></h2>
                                <p>@slide.GetPropertyValue("description")</p>
                                <div class="buttons">
                                    <a href="#" class="prev"><i class="fa fa-angle-left"></i></a>
                                    <a href="@relatedPage" class="button">Read More</a>
                                    <a href="#" class="next"><i class="fa fa-angle-right"></i></a>
                                </div>
                            </div>
                        }
                    </div>
                }
            </section>
        </div>
    <!--/ slider -->
    }
}