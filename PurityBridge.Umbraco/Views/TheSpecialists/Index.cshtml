@using Umbraco.Core.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Web.Models.RenderModel>
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var specialistsData = uQuery.GetNodesByType("SpecialistsData") ?? new List<umbraco.NodeFactory.Node>();
}
<link href="~/Content/css/textcontent.css" rel="stylesheet" />
@{
    var specialists = Umbraco.TypedContent(specialistsData.First().Id).Children(c => c.DocumentTypeAlias == "Specialist");
}
@if (specialists.Any())
{
    string content = string.Empty;
    <div class="vc_row-fluid spannedItems">
        <div class="vc_span6">
            @foreach (var specialistItem in specialists.Where(i => i.Index() % 2 == 0))
            {
                <section class="widget right item">
                    @renderSpecialistItem(specialistItem, specialistItem.GetPropertyValue<string>("partialText"))
                    <div class="wpb_wrapper leftwarpper">
                        <a class="read-more fancybox" href="#@specialistItem.Id"> Read More <i class="more fa fa-mail-forward"></i></a>
                    </div>
                </section>

                <div id="@specialistItem.Id" style="display: none; width: 500px !important;">
                    <section class="widget right">
                        @renderSpecialistItem(specialistItem, specialistItem.GetPropertyValue<string>("text"))
                    </section>
                </div>
            }
        </div>
        <div class="vc_span6">
            @foreach (var specialistItem in specialists.Where(i => i.Index() % 2 == 1))
            {
                <section class="widget right item">
                    @renderSpecialistItem(specialistItem, specialistItem.GetPropertyValue<string>("partialText"))

                    <div class="wpb_wrapper leftwarpper">
                        <a class="read-more fancybox" href="#@specialistItem.Id"> Read More <i class="more fa fa-mail-forward"></i></a>
                    </div>
                </section>

                <div id="@specialistItem.Id" style="display: none; width: 500px !important;">
                    <section class="widget right">
                        @renderSpecialistItem(specialistItem, specialistItem.GetPropertyValue<string>("text"))
                    </section>
                </div>
            }
        </div>
    </div>
}

@helper renderSpecialistItem(IPublishedContent item, string text)
{
    var content = string.Format("<h1></h1><p class='capitalized'>{0}</p>", text.Replace('\n' + "", "</p><p>").Replace("<<.>>", "<i class='fa fa-circle'>  </i>"));
    var alt = item.GetPropertyValue<string>("thumbnailImageAltValue") ?? string.Empty;
    <div class="widget-title">
        @item.GetPropertyValue("heading")
    </div>
    <div class="wpb_text_column wpb_content_element">
        <div class="wpb_wrapper">
            <img src="@item.GetCropUrl("spannedPhotoItem", "Rectangular")" alt="@alt" class="align" />
        </div>
        @Html.Raw(content)
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            $('.wpb_wrapper:first-child').each(function (i, e) {
                var eHeight = $(e).find('.alignleft').outerHeight();
                var lastChildHeight = $(e).outerHeight();
                if (eHeight > lastChildHeight) {
                    $(e).css({ paddingBottom: eHeight - lastChildHeight - 34 });
                }
            });

            $('.read-more').fancybox({
                autoDimensions: true
            });
        });
    </script>
}