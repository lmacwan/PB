@using Umbraco.Web.Models
@using Umbraco.Core.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<RenderModel>
@section styles {
    <link href="~/Content/css/treatment.css" rel="stylesheet" />
    <link href="~/Content/css/testimonial.css" rel="stylesheet" />
}
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewBag.ShowTitleBar = true;
    var urlName = Request.RawUrl.Split(new string[] { "/" }, StringSplitOptions.RemoveEmptyEntries).Last();
    var treatmentNode = uQuery.GetNodesByType("TreatmentsData").First().GetDescendantNodesByType("TreatmentData").Where(d => d.UrlName == urlName).First();
    var details = Umbraco.TypedContent(treatmentNode.Id).Children(c => c.DocumentTypeAlias.Equals("TreatmentDetails", StringComparison.CurrentCultureIgnoreCase));
    IEnumerable<IPublishedContent> sideBars = null;
    if (details.Any())
    {
        sideBars = details.First().Children(c => c.DocumentTypeAlias.Equals("sidebar", StringComparison.InvariantCultureIgnoreCase)).Where("visible");
    }
    var cols = 12;
}
@{
    var treatmentContent = Umbraco.TypedContent(treatmentNode.Id);
    var bannarTestimonial = treatmentContent.Descendants().FirstOrDefault(d => d.DocumentTypeAlias == "Testimonial" && d.GetPropertyValue<bool>("banner"));
}
@section ImageSection {
    @{
        var alt = treatmentContent.GetPropertyValue<string>("thumbnailImageAltValue") ?? string.Empty;
    }
    <section id="banner" style="background-color: @treatmentContent.GetPropertyValue("colour");">
        <div id="treatment-image" class="grid-row" style="background-color: @treatmentContent.GetPropertyValue("colour");">
            @if (bannarTestimonial != null)
            {
                <div class="widget banner-testimonial testimonial">
                    <div class="clearfix">
                        <p>@bannarTestimonial.GetPropertyValue("content")</p>
                    </div>
                    <div class="author">@bannarTestimonial.GetPropertyValue("author")</div>
                </div>
            }
            <img src="@treatmentContent.GetCropUrl("thumbnail", "banner")" alt="@alt" width="270" height="180" style="background-color: @treatmentContent.GetPropertyValue("colour");" />
        </div>
    </section>
}
@if (sideBars != null && sideBars.Any())
{
    foreach (IPublishedContent sidebar in sideBars.DistinctBy(s => s.GetPropertyValue<bool>("Left")))
    {
        cols -= 3;
        if (sidebar.GetPropertyValue<bool>("Left"))
        {
        }
        else
        {
            int photo = treatmentNode.GetDescendantNodesByType("photo").Count();
            int video = treatmentNode.GetDescendantNodesByType("TreatmentVideos").Count();
            @section RightSideBar {
                <div class="grid-col grid-col-3 sidebar" data-sidebar="1023">
                    <span class="more">
                        <i class="fa fa-times"></i>
                    </span>
                    @if (photo > 0 || video > 0)
                    {
                        <section id="relatedTreatmentLinksSection" class="widget doctors-carousel doctors">
                            <div class="widget-title">Related Links</div>
                            @if (photo > 0)
                            {
                                var link = "/gallery/photos/" + treatmentNode.UrlName;
                                <div class="relatedTeaatmentLink">
                                    <a href="@link" class="read-more">
                                        Related Photos
                                        <i class="fa fa-camera more"></i>
                                    </a>
                                </div>
                            }
                            @if (video > 0)
                            {
                                var link = "/gallery/videos/treatments/" + treatmentNode.UrlName;
                                <div class="relatedTeaatmentLink">
                                    <a href="@link" class="read-more">
                                        Related Videos
                                        <i class="fa fa-video-camera more"></i>
                                    </a>
                                </div>
                            }
                        </section>
                    }
                    @Html.Partial("_RelatedLinksPartial", sidebar)
                    @if (sidebar.GetPropertyValue<bool>("appointmenWidget"))
                    {
                        Html.RenderPartial("_MakeAnAppointmentPartial");
                    }
                </div>
            }
        }
    }
}
<div id="page-content" class="grid-col grid-col-@cols beautify">
    <div class="vc_row-fluid">
        <span class="more">
            <i class="fa fa-bars"></i>
        </span>
        @Html.Partial("_ChildrenPartial", details.First().Children().FirstOrDefault(c => c.DocumentTypeAlias.Equals("content", StringComparison.CurrentCultureIgnoreCase) && c.IsVisible()))
    </div>
</div>