@using Umbraco.Core.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Web.Models.RenderModel>
@{
    Layout = "Layout.cshtml";
}
<link href="~/Content/css/textcontent.css" rel="stylesheet" />
@{
    var specialists = Model.Content.Descendants("PhotoItemPopup");
}
@if (specialists.Any())
{
    string content = string.Empty;
    <div class="vc_row-fluid spannedItems">
        <div class="vc_span6">
            @foreach (var specialistItem in specialists.Where(i => i.Index() % 2 == 0))
            {
                @(renderItemTemplate(specialistItem))
            }
        </div>
        <div class="vc_span6">
            @foreach (var specialistItem in specialists.Where(i => i.Index() % 2 == 1))
            {
                @(renderItemTemplate(specialistItem))
            }
        </div>
    </div>
}

@helper renderItemTemplate(IPublishedContent item)
{
    <section class="widget right item">
        @(renderPhotoItem(item, item.GetPropertyValue<string>("partialText")))
        <div class="wpb_wrapper leftwarpper">
            <a class="read-more fancybox" href="#@item.Id"> Read More <i class="more fa fa-mail-forward"></i></a>
        </div>
    </section>

    <div id="@item.Id" style="display: none; width: 500px !important;">
        <section class="widget right">
            @(renderPhotoItem(item, item.GetPropertyValue<string>("text")))
        </section>
    </div>
}

@helper renderPhotoItem(IPublishedContent item, string text)
{
    var content = string.Format("<h1></h1><p class='capitalized'>{0}</p>", text.Replace('\n' + "", "</p><p>").Replace("<<.>>", "<i class='fa fa-circle'>  </i>"));
    var alt = item.GetPropertyValue<string>("thumbnailImageAltValue") ?? string.Empty;
    <div class="widget-title">
        @item.GetPropertyValue("heading")
    </div>
    <div class="wpb_text_column wpb_content_element">
        <div class="wpb_wrapper">
            <img src="@item.GetCropUrl("spannedPhotoItem", "Rectangular")" alt="@alt" class="align" />
        </div>
        @Html.Raw(content)
    </div>
}